function Rcn(){var e=this;return e.stateBox=[],e.routeBox=[],e.addHashToUrl=function(){if(window.location.href.indexOf("#/")<0){var e=window.location.href.replace(/#\//g,"");e+="#/",window.location.href=e}}(),e}Rcn.prototype.newRouter=function(){var e=this;e.routeBox;return e.bindHashChangeEvent=function(){window.addEventListener("hashchange",function(){if(!window.location.href||!window.location.href.indexOf("#")<0)throw new Error("Something went wrong (missing '#')");e.findRoute(window.location.href.split("#")[1],!0)})}(),e.newRoute=function(t){var r=this;if(!t)throw new Error("No route params provided!");if(!t.name||!t.name.length)throw new Error("No route name specified!");if(t.name.indexOf("/")>-1)throw new Error("Route name shouldn't contain slash (/) character!");if(!t.url||!t.url.length)throw new Error("No route url specified!");if(!t.wrapper||!t.wrapper.length)throw new Error("No route wrapper DOM id specified!");if(!document.getElementById(t.wrapper))throw new Error("Route DOM wrapper not found in document!");if(!t.template&&!t.templateUrl)throw console.log(t),new Error("No route template specified!");if(t.template&&t.templateUrl)throw new Error("Template and templateUrl specified at the same time!");return e.routeBox.push(t),r},e.findRoute=function(t,r){if(t||t.length||"string"==typeof t)return t.indexOf("/")>-1?e.findRouteByUrl(t,r):e.findRouteByName(t,r);throw new Error("No route to find specified or is not a string!")},e.findRouteByUrl=function(t,r){if(!t||!t.length||"string"!=typeof t)throw new Error("No route href specified or is not a string!");var n=e.routeBox.filter(function(e){return e.url===t});return n.length?(r===!0&&e.activateRoute(n[0]),n[0]):void console.warn("Route not found!",t)},e.findRouteByName=function(t,r){if(!t||!t.length||"string"!=typeof t)throw new Error("No route name specified or is not a string!");var n=e.routeBox.filter(function(e){return e.name===t});return n.length?(r===!0&&e.activateRoute(n[0]),n[0]):void console.warn("Route not found!")},e.activateRoute=function(t,r){"string"==typeof t&&(t=e.findRoute(t));var n=document.getElementById(t.wrapper),o=document.createDocumentFragment(),i=document.createElement("div");if(!n)throw new Error("Route wrapper does not exist in document!");if(t.template)i.innerHTML=t.template,o.appendChild(i);else if(!t.templateUrl)throw new Error("Template not defined!");t.beforeRender&&t.beforeRender(o),t.mounted&&t.resetTemplate!==!0||(t.mounted===!0,n.innerHTML="",n.appendChild(o),t.afterRender&&"function"==typeof t.afterRender&&setTimeout(function(){t.afterRender()},0))},e.redirect=function(t,r){var n=e.findRoute(t);if(!n||!n.url)throw new Error("Redirection failed - route not found");console.log("redirect: ",t),window.location.hash=n.url},e},Rcn.prototype.newComponent=function(e){},Rcn.prototype.findState=function(e){var t=this;if(!e)throw new Error("No state name provided!");var r=t.stateBox.filter(function(t){return t.name=e});return r&&r.length?r[0]:void 0},Rcn.prototype.newState=function(e){var t=this,r=t.stateBox;if(!e)throw new Error("No state params provided!");if(!e.name||!e.name.length)throw new Error("No state name provided!");return r.push(e),t};